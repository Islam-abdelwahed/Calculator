
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002a6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000002fa  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000032c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  00000368  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a27  00000000  00000000  00000418  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006ae  00000000  00000000  00000e3f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000582  00000000  00000000  000014ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000010c  00000000  00000000  00001a70  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000422  00000000  00000000  00001b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003d2  00000000  00000000  00001f9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  00002370  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ea       	ldi	r30, 0xA6	; 166
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 4c 01 	call	0x298	; 0x298 <main>
  7a:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <BUZZER_Init>:
		DIO_setPinValue(BUZZER_PORT, BUZZER_PIN, DIO_PIN_LOW);
	}
	};
	
void BUZZER_Toggle(void){
	DIO_togglePin(BUZZER_PORT, BUZZER_PIN);
  82:	41 e0       	ldi	r20, 0x01	; 1
  84:	66 e0       	ldi	r22, 0x06	; 6
  86:	82 e0       	ldi	r24, 0x02	; 2
  88:	0e 94 6a 00 	call	0xd4	; 0xd4 <DIO_setPinDir>
  8c:	40 e0       	ldi	r20, 0x00	; 0
  8e:	66 e0       	ldi	r22, 0x06	; 6
  90:	82 e0       	ldi	r24, 0x02	; 2
  92:	0e 94 db 00 	call	0x1b6	; 0x1b6 <DIO_setPinValue>
  96:	08 95       	ret

00000098 <BUZZER_Status>:
  98:	88 23       	and	r24, r24
  9a:	31 f0       	breq	.+12     	; 0xa8 <BUZZER_Status+0x10>
  9c:	41 e0       	ldi	r20, 0x01	; 1
  9e:	66 e0       	ldi	r22, 0x06	; 6
  a0:	82 e0       	ldi	r24, 0x02	; 2
  a2:	0e 94 db 00 	call	0x1b6	; 0x1b6 <DIO_setPinValue>
  a6:	08 95       	ret
  a8:	40 e0       	ldi	r20, 0x00	; 0
  aa:	66 e0       	ldi	r22, 0x06	; 6
  ac:	82 e0       	ldi	r24, 0x02	; 2
  ae:	0e 94 db 00 	call	0x1b6	; 0x1b6 <DIO_setPinValue>
  b2:	08 95       	ret

000000b4 <BUZZER_SHORT_BEEP>:
	};
	
void BUZZER_SHORT_BEEP(void){
	BUZZER_Status(BUZZER_ON);
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	0e 94 4c 00 	call	0x98	; 0x98 <BUZZER_Status>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ba:	2f ef       	ldi	r18, 0xFF	; 255
  bc:	84 e3       	ldi	r24, 0x34	; 52
  be:	9c e0       	ldi	r25, 0x0C	; 12
  c0:	21 50       	subi	r18, 0x01	; 1
  c2:	80 40       	sbci	r24, 0x00	; 0
  c4:	90 40       	sbci	r25, 0x00	; 0
  c6:	e1 f7       	brne	.-8      	; 0xc0 <BUZZER_SHORT_BEEP+0xc>
  c8:	00 c0       	rjmp	.+0      	; 0xca <BUZZER_SHORT_BEEP+0x16>
  ca:	00 00       	nop
	_delay_ms(250);
	BUZZER_Status(BUZZER_OFF);
  cc:	80 e0       	ldi	r24, 0x00	; 0
  ce:	0e 94 4c 00 	call	0x98	; 0x98 <BUZZER_Status>
  d2:	08 95       	ret

000000d4 <DIO_setPinDir>:
		break;
		case DIO_PORTC:
		SET_BIT(PORTC,pin);
		break;
		case DIO_PORTD:
		SET_BIT(PORTD,pin);
  d4:	44 23       	and	r20, r20
  d6:	b9 f1       	breq	.+110    	; 0x146 <DIO_setPinDir+0x72>
  d8:	41 30       	cpi	r20, 0x01	; 1
  da:	09 f0       	breq	.+2      	; 0xde <DIO_setPinDir+0xa>
  dc:	6b c0       	rjmp	.+214    	; 0x1b4 <DIO_setPinDir+0xe0>
  de:	81 30       	cpi	r24, 0x01	; 1
  e0:	89 f0       	breq	.+34     	; 0x104 <DIO_setPinDir+0x30>
  e2:	28 f0       	brcs	.+10     	; 0xee <DIO_setPinDir+0x1a>
  e4:	82 30       	cpi	r24, 0x02	; 2
  e6:	c9 f0       	breq	.+50     	; 0x11a <DIO_setPinDir+0x46>
  e8:	83 30       	cpi	r24, 0x03	; 3
  ea:	11 f1       	breq	.+68     	; 0x130 <DIO_setPinDir+0x5c>
  ec:	08 95       	ret
  ee:	2a b3       	in	r18, 0x1a	; 26
  f0:	81 e0       	ldi	r24, 0x01	; 1
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_setPinDir+0x26>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	6a 95       	dec	r22
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_setPinDir+0x22>
  fe:	82 2b       	or	r24, r18
 100:	8a bb       	out	0x1a, r24	; 26
 102:	08 95       	ret
 104:	27 b3       	in	r18, 0x17	; 23
 106:	81 e0       	ldi	r24, 0x01	; 1
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	02 c0       	rjmp	.+4      	; 0x110 <DIO_setPinDir+0x3c>
 10c:	88 0f       	add	r24, r24
 10e:	99 1f       	adc	r25, r25
 110:	6a 95       	dec	r22
 112:	e2 f7       	brpl	.-8      	; 0x10c <DIO_setPinDir+0x38>
 114:	82 2b       	or	r24, r18
 116:	87 bb       	out	0x17, r24	; 23
 118:	08 95       	ret
 11a:	24 b3       	in	r18, 0x14	; 20
 11c:	81 e0       	ldi	r24, 0x01	; 1
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	02 c0       	rjmp	.+4      	; 0x126 <DIO_setPinDir+0x52>
 122:	88 0f       	add	r24, r24
 124:	99 1f       	adc	r25, r25
 126:	6a 95       	dec	r22
 128:	e2 f7       	brpl	.-8      	; 0x122 <DIO_setPinDir+0x4e>
 12a:	82 2b       	or	r24, r18
 12c:	84 bb       	out	0x14, r24	; 20
 12e:	08 95       	ret
 130:	21 b3       	in	r18, 0x11	; 17
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	02 c0       	rjmp	.+4      	; 0x13c <DIO_setPinDir+0x68>
 138:	88 0f       	add	r24, r24
 13a:	99 1f       	adc	r25, r25
 13c:	6a 95       	dec	r22
 13e:	e2 f7       	brpl	.-8      	; 0x138 <DIO_setPinDir+0x64>
 140:	82 2b       	or	r24, r18
 142:	81 bb       	out	0x11, r24	; 17
 144:	08 95       	ret
 146:	81 30       	cpi	r24, 0x01	; 1
 148:	91 f0       	breq	.+36     	; 0x16e <DIO_setPinDir+0x9a>
 14a:	28 f0       	brcs	.+10     	; 0x156 <DIO_setPinDir+0x82>
 14c:	82 30       	cpi	r24, 0x02	; 2
 14e:	d9 f0       	breq	.+54     	; 0x186 <DIO_setPinDir+0xb2>
 150:	83 30       	cpi	r24, 0x03	; 3
 152:	29 f1       	breq	.+74     	; 0x19e <DIO_setPinDir+0xca>
 154:	08 95       	ret
 156:	2a b3       	in	r18, 0x1a	; 26
 158:	81 e0       	ldi	r24, 0x01	; 1
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	02 c0       	rjmp	.+4      	; 0x162 <DIO_setPinDir+0x8e>
 15e:	88 0f       	add	r24, r24
 160:	99 1f       	adc	r25, r25
 162:	6a 95       	dec	r22
 164:	e2 f7       	brpl	.-8      	; 0x15e <DIO_setPinDir+0x8a>
 166:	80 95       	com	r24
 168:	82 23       	and	r24, r18
 16a:	8a bb       	out	0x1a, r24	; 26
 16c:	08 95       	ret
 16e:	27 b3       	in	r18, 0x17	; 23
 170:	81 e0       	ldi	r24, 0x01	; 1
 172:	90 e0       	ldi	r25, 0x00	; 0
 174:	02 c0       	rjmp	.+4      	; 0x17a <DIO_setPinDir+0xa6>
 176:	88 0f       	add	r24, r24
 178:	99 1f       	adc	r25, r25
 17a:	6a 95       	dec	r22
 17c:	e2 f7       	brpl	.-8      	; 0x176 <DIO_setPinDir+0xa2>
 17e:	80 95       	com	r24
 180:	82 23       	and	r24, r18
 182:	87 bb       	out	0x17, r24	; 23
 184:	08 95       	ret
 186:	24 b3       	in	r18, 0x14	; 20
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	02 c0       	rjmp	.+4      	; 0x192 <DIO_setPinDir+0xbe>
 18e:	88 0f       	add	r24, r24
 190:	99 1f       	adc	r25, r25
 192:	6a 95       	dec	r22
 194:	e2 f7       	brpl	.-8      	; 0x18e <DIO_setPinDir+0xba>
 196:	80 95       	com	r24
 198:	82 23       	and	r24, r18
 19a:	84 bb       	out	0x14, r24	; 20
 19c:	08 95       	ret
 19e:	21 b3       	in	r18, 0x11	; 17
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_setPinDir+0xd6>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	6a 95       	dec	r22
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_setPinDir+0xd2>
 1ae:	80 95       	com	r24
 1b0:	82 23       	and	r24, r18
 1b2:	81 bb       	out	0x11, r24	; 17
 1b4:	08 95       	ret

000001b6 <DIO_setPinValue>:
		break;
	}
	};

void DIO_setPinValue(uint8 port,uint8 pin,uint8 value){
		switch(value){
 1b6:	44 23       	and	r20, r20
 1b8:	b9 f1       	breq	.+110    	; 0x228 <DIO_setPinValue+0x72>
 1ba:	41 30       	cpi	r20, 0x01	; 1
 1bc:	09 f0       	breq	.+2      	; 0x1c0 <DIO_setPinValue+0xa>
 1be:	6b c0       	rjmp	.+214    	; 0x296 <DIO_setPinValue+0xe0>
			case DIO_PIN_HIGH:
			{
				switch(port){
 1c0:	81 30       	cpi	r24, 0x01	; 1
 1c2:	89 f0       	breq	.+34     	; 0x1e6 <DIO_setPinValue+0x30>
 1c4:	28 f0       	brcs	.+10     	; 0x1d0 <DIO_setPinValue+0x1a>
 1c6:	82 30       	cpi	r24, 0x02	; 2
 1c8:	c9 f0       	breq	.+50     	; 0x1fc <DIO_setPinValue+0x46>
 1ca:	83 30       	cpi	r24, 0x03	; 3
 1cc:	11 f1       	breq	.+68     	; 0x212 <DIO_setPinValue+0x5c>
 1ce:	08 95       	ret
					case DIO_PORTA:
					SET_BIT(PORTA,pin);
 1d0:	2b b3       	in	r18, 0x1b	; 27
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	02 c0       	rjmp	.+4      	; 0x1dc <DIO_setPinValue+0x26>
 1d8:	88 0f       	add	r24, r24
 1da:	99 1f       	adc	r25, r25
 1dc:	6a 95       	dec	r22
 1de:	e2 f7       	brpl	.-8      	; 0x1d8 <DIO_setPinValue+0x22>
 1e0:	82 2b       	or	r24, r18
 1e2:	8b bb       	out	0x1b, r24	; 27
					break;
 1e4:	08 95       	ret
					case DIO_PORTB:
					SET_BIT(PORTB,pin);
 1e6:	28 b3       	in	r18, 0x18	; 24
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <DIO_setPinValue+0x3c>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	6a 95       	dec	r22
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <DIO_setPinValue+0x38>
 1f6:	82 2b       	or	r24, r18
 1f8:	88 bb       	out	0x18, r24	; 24
					break;
 1fa:	08 95       	ret
					case DIO_PORTC:
					SET_BIT(PORTC,pin);
 1fc:	25 b3       	in	r18, 0x15	; 21
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_setPinValue+0x52>
 204:	88 0f       	add	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	6a 95       	dec	r22
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_setPinValue+0x4e>
 20c:	82 2b       	or	r24, r18
 20e:	85 bb       	out	0x15, r24	; 21
					break;
 210:	08 95       	ret
					case DIO_PORTD:
					SET_BIT(PORTD,pin);
 212:	22 b3       	in	r18, 0x12	; 18
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	02 c0       	rjmp	.+4      	; 0x21e <DIO_setPinValue+0x68>
 21a:	88 0f       	add	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	6a 95       	dec	r22
 220:	e2 f7       	brpl	.-8      	; 0x21a <DIO_setPinValue+0x64>
 222:	82 2b       	or	r24, r18
 224:	82 bb       	out	0x12, r24	; 18
					break;
 226:	08 95       	ret
				}
			}
			break;
			case DIO_PIN_LOW:
			{
				switch(port){
 228:	81 30       	cpi	r24, 0x01	; 1
 22a:	91 f0       	breq	.+36     	; 0x250 <DIO_setPinValue+0x9a>
 22c:	28 f0       	brcs	.+10     	; 0x238 <DIO_setPinValue+0x82>
 22e:	82 30       	cpi	r24, 0x02	; 2
 230:	d9 f0       	breq	.+54     	; 0x268 <DIO_setPinValue+0xb2>
 232:	83 30       	cpi	r24, 0x03	; 3
 234:	29 f1       	breq	.+74     	; 0x280 <DIO_setPinValue+0xca>
 236:	08 95       	ret
					case DIO_PORTA:
					CLR_BIT(PORTA,pin);
 238:	2b b3       	in	r18, 0x1b	; 27
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	90 e0       	ldi	r25, 0x00	; 0
 23e:	02 c0       	rjmp	.+4      	; 0x244 <DIO_setPinValue+0x8e>
 240:	88 0f       	add	r24, r24
 242:	99 1f       	adc	r25, r25
 244:	6a 95       	dec	r22
 246:	e2 f7       	brpl	.-8      	; 0x240 <DIO_setPinValue+0x8a>
 248:	80 95       	com	r24
 24a:	82 23       	and	r24, r18
 24c:	8b bb       	out	0x1b, r24	; 27
					break;
 24e:	08 95       	ret
					case DIO_PORTB:
					CLR_BIT(PORTB,pin);
 250:	28 b3       	in	r18, 0x18	; 24
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	02 c0       	rjmp	.+4      	; 0x25c <DIO_setPinValue+0xa6>
 258:	88 0f       	add	r24, r24
 25a:	99 1f       	adc	r25, r25
 25c:	6a 95       	dec	r22
 25e:	e2 f7       	brpl	.-8      	; 0x258 <DIO_setPinValue+0xa2>
 260:	80 95       	com	r24
 262:	82 23       	and	r24, r18
 264:	88 bb       	out	0x18, r24	; 24
					break;
 266:	08 95       	ret
					case DIO_PORTC:
					CLR_BIT(PORTC,pin);
 268:	25 b3       	in	r18, 0x15	; 21
 26a:	81 e0       	ldi	r24, 0x01	; 1
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_setPinValue+0xbe>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	6a 95       	dec	r22
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_setPinValue+0xba>
 278:	80 95       	com	r24
 27a:	82 23       	and	r24, r18
 27c:	85 bb       	out	0x15, r24	; 21
					break;
 27e:	08 95       	ret
					case DIO_PORTD:
					CLR_BIT(PORTD,pin);
 280:	22 b3       	in	r18, 0x12	; 18
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	02 c0       	rjmp	.+4      	; 0x28c <DIO_setPinValue+0xd6>
 288:	88 0f       	add	r24, r24
 28a:	99 1f       	adc	r25, r25
 28c:	6a 95       	dec	r22
 28e:	e2 f7       	brpl	.-8      	; 0x288 <DIO_setPinValue+0xd2>
 290:	80 95       	com	r24
 292:	82 23       	and	r24, r18
 294:	82 bb       	out	0x12, r24	; 18
 296:	08 95       	ret

00000298 <main>:



int main(void)
{
	BUZZER_Init();
 298:	0e 94 41 00 	call	0x82	; 0x82 <BUZZER_Init>
	
	BUZZER_SHORT_BEEP();
 29c:	0e 94 5a 00 	call	0xb4	; 0xb4 <BUZZER_SHORT_BEEP>
 2a0:	ff cf       	rjmp	.-2      	; 0x2a0 <main+0x8>

000002a2 <_exit>:
 2a2:	f8 94       	cli

000002a4 <__stop_program>:
 2a4:	ff cf       	rjmp	.-2      	; 0x2a4 <__stop_program>
